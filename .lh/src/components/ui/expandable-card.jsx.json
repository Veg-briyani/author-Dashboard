{
    "sourceFile": "src/components/ui/expandable-card.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1738642489185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1738642489185,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\n\nexport const ProjectStatusCard = ({\n  title,\n  progress,\n  dueDate,\n  contributors,\n  tasks,\n  githubStars,\n  openIssues,\n  bookDetails,\n  publishingDetails\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <div className=\"card mb-4 shadow-sm\">\n      <div className=\"card-header bg-light py-3 cursor-pointer\" onClick={() => setIsExpanded(!isExpanded)}>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <h5 className=\"mb-0 text-primary\">\n            <i className=\"bx bx-book me-2\"></i>\n            {title}\n          </h5>\n          <div className=\"d-flex align-items-center gap-3\">\n            <div className=\"progress\" style={{ width: '100px', height: '8px' }}>\n              <div\n                className=\"progress-bar bg-primary\"\n                style={{ width: `${progress}%` }}\n                role=\"progressbar\"\n              ></div>\n            </div>\n            <i className={`bx ${isExpanded ? 'bx-chevron-up' : 'bx-chevron-down'}`}></i>\n          </div>\n        </div>\n      </div>\n\n      {isExpanded && (\n        <div className=\"card-body\">\n          <div className=\"row g-4\">\n            <div className=\"col-md-4\">\n              <div className=\"border rounded p-2 text-center\">\n                <img\n                  src={bookDetails.coverImage}\n                  alt={title}\n                  className=\"img-fluid rounded-2\"\n                  style={{ maxHeight: '300px' }}\n                />\n                <div className=\"mt-3\">\n                  <div className=\"d-flex justify-content-center gap-2 mb-2\">\n                    {contributors.map((contributor, index) => (\n                      <div key={index} className=\"avatar avatar-xs\">\n                        <div className=\"avatar-initial rounded-circle bg-label-primary\">\n                          {contributor.name[0]}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"small text-muted\">\n                    <i className=\"bx bx-calendar me-1\"></i> Due: {dueDate}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-8\">\n              <div className=\"row g-3\">\n                <div className=\"col-12\">\n                  <div className=\"d-flex justify-content-between mb-2\">\n                    <div className=\"d-flex gap-2\">\n                      <div className=\"badge bg-label-primary\">\n                        <i className=\"bx bx-star me-1\"></i> {githubStars}\n                      </div>\n                      <div className=\"badge bg-label-warning\">\n                        <i className=\"bx bx-error-circle me-1\"></i> {openIssues} Issues\n                      </div>\n                    </div>\n                    <button className=\"btn btn-primary btn-sm\">\n                      <i className=\"bx bx-edit me-1\"></i> Edit\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"list-group\">\n                    {tasks.map((task, index) => (\n                      <div key={index} className=\"list-group-item d-flex align-items-center\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"form-check-input me-2\"\n                          checked={task.completed}\n                          readOnly\n                        />\n                        <span className={task.completed ? 'text-decoration-line-through' : ''}>\n                          {task.title}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {publishingDetails && (\n                  <div className=\"col-12\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table table-sm\">\n                        <tbody>\n                          {Object.entries(publishingDetails).map(([key, value]) => (\n                            <tr key={key}>\n                              <th className=\"ps-0\">{key}</th>\n                              <td className=\"text-end pe-0\">{value}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};"
        }
    ]
}