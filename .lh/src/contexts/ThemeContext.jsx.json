{
    "sourceFile": "src/contexts/ThemeContext.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1738726420875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738726626950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,21 @@\n-import React, { createContext, useState, useContext, useEffect } from 'react';\n+import React, { createContext, useState, useContext, useEffect } from \"react\";\n \n const ThemeContext = createContext();\n \n export const ThemeProvider = ({ children }) => {\n   const [darkMode, setDarkMode] = useState(false);\n \n   useEffect(() => {\n-    const isDark = localStorage.getItem('darkMode') === 'true';\n+    const isDark = localStorage.getItem(\"darkMode\") === \"true\";\n     setDarkMode(isDark);\n   }, []);\n \n   const toggleDarkMode = () => {\n     const newDarkMode = !darkMode;\n     setDarkMode(newDarkMode);\n-    localStorage.setItem('darkMode', newDarkMode);\n-    document.body.classList.toggle('dark-mode');\n+    localStorage.setItem(\"darkMode\", newDarkMode);\n+    document.body.classList.toggle(\"dark-mode\");\n   };\n \n   return (\n     <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n@@ -23,5 +23,5 @@\n     </ThemeContext.Provider>\n   );\n };\n \n-export const useTheme = () => useContext(ThemeContext);\n\\ No newline at end of file\n+export const useTheme = () => useContext(ThemeContext);\n"
                },
                {
                    "date": 1738742880838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,22 @@\n-import React, { createContext, useState, useContext, useEffect } from \"react\";\n+import React, { createContext, useState, useContext, useEffect } from 'react';\n+import PropTypes from 'prop-types';\n \n const ThemeContext = createContext();\n \n export const ThemeProvider = ({ children }) => {\n   const [darkMode, setDarkMode] = useState(false);\n \n   useEffect(() => {\n-    const isDark = localStorage.getItem(\"darkMode\") === \"true\";\n+    const isDark = localStorage.getItem('darkMode') === 'true';\n     setDarkMode(isDark);\n   }, []);\n \n   const toggleDarkMode = () => {\n     const newDarkMode = !darkMode;\n     setDarkMode(newDarkMode);\n-    localStorage.setItem(\"darkMode\", newDarkMode);\n-    document.body.classList.toggle(\"dark-mode\");\n+    localStorage.setItem('darkMode', newDarkMode);\n+    document.body.classList.toggle('dark-mode');\n   };\n \n   return (\n     <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n@@ -23,5 +24,18 @@\n     </ThemeContext.Provider>\n   );\n };\n \n-export const useTheme = () => useContext(ThemeContext);\n+ThemeProvider.propTypes = {\n+  children: PropTypes.node.isRequired,\n+};\n+\n+// Move useTheme to a separate file\n+const useTheme = () => {\n+  const context = useContext(ThemeContext);\n+  if (!context) {\n+    throw new Error('useTheme must be used within a ThemeProvider');\n+  }\n+  return context;\n+};\n+\n+export { useTheme };\n"
                },
                {
                    "date": 1738742912285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { createContext, useState, useContext, useEffect } from 'react';\n import PropTypes from 'prop-types';\n-\n+import { useTheme } from \"../hooks/useTheme\";\n const ThemeContext = createContext();\n \n export const ThemeProvider = ({ children }) => {\n   const [darkMode, setDarkMode] = useState(false);\n"
                },
                {
                    "date": 1738742942567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { createContext, useState, useContext, useEffect } from 'react';\n import PropTypes from 'prop-types';\n-import { useTheme } from \"../hooks/useTheme\";\n+\n const ThemeContext = createContext();\n \n export const ThemeProvider = ({ children }) => {\n   const [darkMode, setDarkMode] = useState(false);\n"
                }
            ],
            "date": 1738726420875,
            "name": "Commit-0",
            "content": "import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const isDark = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDark);\n  }, []);\n\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"
        }
    ]
}