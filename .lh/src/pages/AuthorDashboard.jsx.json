{
    "sourceFile": "src/pages/AuthorDashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1738569960008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738570325224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,230 +1,312 @@\n-\n-import { Card, CardHeader, CardTitle, CardContent } from '../components/ui/card';\n-import { Book, DollarSign, Users, TrendingUp, Star, FileText } from 'lucide-react';\n-import { Badge } from '../components/ui/badge';\n-import { Button } from '../components/ui/button';\n+import React, { useState } from 'react';\n+import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n+import { Book, DollarSign, Users, TrendingUp, Star, FileText, Search, Filter } from 'lucide-react';\n+import { Badge } from '@/components/ui/badge';\n+import { Button } from '@/components/ui/button';\n import PropTypes from 'prop-types';\n \n const AuthorDashboard = () => {\n+    const [searchQuery, setSearchQuery] = useState('');\n+    const [sortBy, setSortBy] = useState('date'); // 'date', 'sales', 'royalty'\n+    \n     const books = [\n         {\n-          id: 1,\n-          title: \"Your Daily Astrological Guide [English]\",\n-          cover: \"/api/placeholder/200/300\",\n-          author: \"Jay Yadav\",\n-          price: 150,\n-          genre: \"Astrology\",\n-          isbn: \"9788198388094\",\n-          pages: 68,\n-          coverType: \"Paperback\",\n-          editions: [\n-            {\n-              date: \"07 Jan 2025\",\n-              quantity: 7,\n-              mrp: 150,\n-              royaltyPercentage: 20,\n-              sold: 0,\n-              royaltyEarned: 0\n-            }\n-          ],\n-          authorPurchases: [\n-            {\n-              date: \"07 Jan 2025\",\n-              particulars: \"Complimentary Copies\",\n-              quantity: 5,\n-              mrp: 150,\n-              discount: \"100%\",\n-              total: 0,\n-              status: \"Paid\"\n-            }\n-          ]\n+            id: 1,\n+            title: \"Your Daily Astrological Guide [English]\",\n+            cover: \"/api/placeholder/200/300\",\n+            author: \"Jay Yadav\",\n+            price: 150,\n+            genre: \"Astrology\",\n+            isbn: \"9788198388094\",\n+            pages: 68,\n+            coverType: \"Paperback\",\n+            editions: [\n+                {\n+                    date: \"07 Jan 2025\",\n+                    quantity: 7,\n+                    mrp: 150,\n+                    royaltyPercentage: 20,\n+                    sold: 0,\n+                    royaltyEarned: 0\n+                }\n+            ],\n+            authorPurchases: [\n+                {\n+                    date: \"07 Jan 2025\",\n+                    particulars: \"Complimentary Copies\",\n+                    quantity: 5,\n+                    mrp: 150,\n+                    discount: \"100%\",\n+                    total: 0,\n+                    status: \"Paid\"\n+                }\n+            ]\n         },\n         {\n-          id: 2,\n-          title: \"Nadi Sutras\",\n-          cover: \"/api/placeholder/200/300\",\n-          author: \"Jay Yadav\",\n-          price: 325,\n-          genre: \"Nadi Astrology\",\n-          isbn: \"9788197852961\",\n-          pages: 153,\n-          coverType: \"Paperback\",\n-          editions: [\n-            {\n-              date: \"01 Dec 2024\",\n-              quantity: 19,\n-              mrp: 325,\n-              royaltyPercentage: 20,\n-              sold: 17,\n-              royaltyEarned: 1105\n-            }\n-          ]\n+            id: 2,\n+            title: \"Nadi Sutras\",\n+            cover: \"/api/placeholder/200/300\",\n+            author: \"Jay Yadav\",\n+            price: 325,\n+            genre: \"Nadi Astrology\",\n+            isbn: \"9788197852961\",\n+            pages: 153,\n+            coverType: \"Paperback\",\n+            editions: [\n+                {\n+                    date: \"01 Dec 2024\",\n+                    quantity: 19,\n+                    mrp: 325,\n+                    royaltyPercentage: 20,\n+                    sold: 17,\n+                    royaltyEarned: 1105\n+                }\n+            ]\n         }\n-      ];\n-    \n-      const totalRoyalties = books.reduce((sum, book) => \n-        sum + book.editions.reduce((eSum, edition) => eSum + edition.royaltyEarned, 0), 0\n-      );\n-    \n-      const totalSales = books.reduce((sum, book) => \n-        sum + book.editions.reduce((eSum, edition) => eSum + edition.sold, 0), 0\n-      );\n-    \n-    \n+    ];\n \n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 p-6\">\n-      <div className=\"max-w-7xl mx-auto space-y-8\">\n-        {/* Header Section */}\n-        <header className=\"flex items-center justify-between bg-white p-6 rounded-2xl shadow-sm\">\n-          <div>\n-            <h1 className=\"text-3xl font-bold text-gray-900\">Welcome Back, Jay</h1>\n-            <p className=\"text-gray-600 mt-2\">Your writing journey at a glance</p>\n-          </div>\n-          <div className=\"flex items-center gap-4\">\n-            <Button variant=\"outline\" className=\"gap-2\">\n-              <Star className=\"h-4 w-4\" />\n-              Author Score: 4.8\n-            </Button>\n-            <img \n-              src=\"/api/placeholder/48/48\" \n-              alt=\"Profile\" \n-              className=\"rounded-full w-12 h-12 border-2 border-orange-200\"\n-            />\n-          </div>\n-        </header>\n+    const calculateMetrics = () => {\n+        const totalRoyalties = books.reduce((sum, book) => \n+            sum + book.editions.reduce((eSum, edition) => eSum + edition.royaltyEarned, 0), 0\n+        );\n \n-        {/* Key Metrics Grid */}\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n-          <MetricCard\n-            icon={<Book className=\"h-6 w-6\" />}\n-            title=\"Published Titles\"\n-            value={books.length}\n-            trend=\"+2% from last month\"\n-            color=\"bg-blue-100\"\n-          />\n-          <MetricCard\n-            icon={<DollarSign className=\"h-6 w-6\" />}\n-            title=\"Total Royalties\"\n-            value={`â‚¹${totalRoyalties}`}\n-            trend=\"+15% from last quarter\"\n-            color=\"bg-green-100\"\n-          />\n-          <MetricCard\n-            icon={<TrendingUp className=\"h-6 w-6\" />}\n-            title=\"Lifetime Sales\"\n-            value={totalSales}\n-            trend=\"173% annual growth\"\n-            color=\"bg-purple-100\"\n-          />\n-          <MetricCard\n-            icon={<Users className=\"h-6 w-6\" />}\n-            title=\"Reader Reach\"\n-            value=\"1.2K+\"\n-            trend=\"Active in 3 markets\"\n-            color=\"bg-orange-100\"\n-          />\n-        </div>\n+        const totalSales = books.reduce((sum, book) => \n+            sum + book.editions.reduce((eSum, edition) => eSum + edition.sold, 0), 0\n+        );\n \n-        {/* Book Catalog Section */}\n-        <section className=\"space-y-6\">\n-          <div className=\"flex items-center justify-between\">\n-            <h2 className=\"text-2xl font-bold text-gray-900\">Your Publications</h2>\n-            <Button className=\"gap-2\">\n-              <FileText className=\"h-4 w-4\" />\n-              New Manuscript\n-            </Button>\n-          </div>\n+        return { totalRoyalties, totalSales };\n+    };\n \n-          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n-            {books.map(book => (\n-              <Card key={book.id} className=\"hover:shadow-lg transition-shadow\">\n-                <CardContent className=\"p-6\">\n-                  <div className=\"flex gap-4\">\n-                    <img\n-                      src={book.cover}\n-                      alt={book.title}\n-                      className=\"w-32 h-48 object-cover rounded-xl shadow-md border\"\n+    const { totalRoyalties, totalSales } = calculateMetrics();\n+\n+    const filteredBooks = books\n+        .filter(book => \n+            book.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n+            book.genre.toLowerCase().includes(searchQuery.toLowerCase())\n+        )\n+        .sort((a, b) => {\n+            if (sortBy === 'sales') {\n+                const aSales = a.editions.reduce((sum, ed) => sum + ed.sold, 0);\n+                const bSales = b.editions.reduce((sum, ed) => sum + ed.sold, 0);\n+                return bSales - aSales;\n+            }\n+            if (sortBy === 'royalty') {\n+                const aRoyalty = a.editions.reduce((sum, ed) => sum + ed.royaltyEarned, 0);\n+                const bRoyalty = b.editions.reduce((sum, ed) => sum + ed.royaltyEarned, 0);\n+                return bRoyalty - aRoyalty;\n+            }\n+            // Default sort by date\n+            return new Date(b.editions[0].date) - new Date(a.editions[0].date);\n+        });\n+\n+    return (\n+        <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 p-6\">\n+            <div className=\"max-w-7xl mx-auto space-y-8\">\n+                {/* Header Section */}\n+                <header className=\"flex items-center justify-between bg-white p-6 rounded-2xl shadow-sm\">\n+                    <div>\n+                        <h1 className=\"text-3xl font-bold text-gray-900\">Welcome Back, Jay</h1>\n+                        <p className=\"text-gray-600 mt-2\">Your writing journey at a glance</p>\n+                    </div>\n+                    <div className=\"flex items-center gap-4\">\n+                        <Button variant=\"outline\" className=\"gap-2\">\n+                            <Star className=\"h-4 w-4\" />\n+                            Author Score: 4.8\n+                        </Button>\n+                        <img \n+                            src=\"/api/placeholder/48/48\" \n+                            alt=\"Profile\" \n+                            className=\"rounded-full w-12 h-12 border-2 border-orange-200\"\n+                        />\n+                    </div>\n+                </header>\n+\n+                {/* Key Metrics Grid */}\n+                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n+                    <MetricCard\n+                        icon={<Book className=\"h-6 w-6\" />}\n+                        title=\"Published Titles\"\n+                        value={books.length}\n+                        trend=\"+2% from last month\"\n+                        color=\"bg-blue-100\"\n+                        iconColor=\"text-blue-600\"\n                     />\n-                    \n-                    <div className=\"flex-1 space-y-3\">\n-                      <div className=\"space-y-1\">\n+                    <MetricCard\n+                        icon={<DollarSign className=\"h-6 w-6\" />}\n+                        title=\"Total Royalties\"\n+                        value={`â‚¹${totalRoyalties}`}\n+                        trend=\"+15% from last quarter\"\n+                        color=\"bg-green-100\"\n+                        iconColor=\"text-green-600\"\n+                    />\n+                    <MetricCard\n+                        icon={<TrendingUp className=\"h-6 w-6\" />}\n+                        title=\"Lifetime Sales\"\n+                        value={totalSales}\n+                        trend=\"173% annual growth\"\n+                        color=\"bg-purple-100\"\n+                        iconColor=\"text-purple-600\"\n+                    />\n+                    <MetricCard\n+                        icon={<Users className=\"h-6 w-6\" />}\n+                        title=\"Reader Reach\"\n+                        value=\"1.2K+\"\n+                        trend=\"Active in 3 markets\"\n+                        color=\"bg-orange-100\"\n+                        iconColor=\"text-orange-600\"\n+                    />\n+                </div>\n+\n+                {/* Book Catalog Section */}\n+                <section className=\"space-y-6\">\n+                    <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n+                        <h2 className=\"text-2xl font-bold text-gray-900\">Your Publications</h2>\n+                        <div className=\"flex flex-col md:flex-row gap-4\">\n+                            <div className=\"relative\">\n+                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n+                                <input\n+                                    type=\"text\"\n+                                    placeholder=\"Search books...\"\n+                                    className=\"pl-10 pr-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n+                                    value={searchQuery}\n+                                    onChange={(e) => setSearchQuery(e.target.value)}\n+                                />\n+                            </div>\n+                            <div className=\"flex gap-2\">\n+                                <select\n+                                    className=\"px-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-orange-500\"\n+                                    value={sortBy}\n+                                    onChange={(e) => setSortBy(e.target.value)}\n+                                >\n+                                    <option value=\"date\">Sort by Date</option>\n+                                    <option value=\"sales\">Sort by Sales</option>\n+                                    <option value=\"royalty\">Sort by Royalty</option>\n+                                </select>\n+                                <Button className=\"gap-2\">\n+                                    <FileText className=\"h-4 w-4\" />\n+                                    New Manuscript\n+                                </Button>\n+                            </div>\n+                        </div>\n+                    </div>\n+\n+                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n+                        {filteredBooks.map(book => (\n+                            <BookCard key={book.id} book={book} />\n+                        ))}\n+                    </div>\n+                </section>\n+            </div>\n+        </div>\n+    );\n+};\n+\n+// Reusable Book Card Component\n+const BookCard = ({ book }) => (\n+    <Card className=\"hover:shadow-lg transition-shadow\">\n+        <CardContent className=\"p-6\">\n+            <div className=\"flex gap-4\">\n+                <img\n+                    src={book.cover}\n+                    alt={book.title}\n+                    className=\"w-32 h-48 object-cover rounded-xl shadow-md border\"\n+                />\n+                \n+                <div className=\"flex-1 space-y-3\">\n+                    <div className=\"space-y-1\">\n                         <h3 className=\"text-lg font-semibold\">{book.title}</h3>\n                         <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n-                          <span>By {book.author}</span>\n-                          <span>â€¢</span>\n-                          <Badge variant=\"outline\">{book.genre}</Badge>\n+                            <span>By {book.author}</span>\n+                            <span>â€¢</span>\n+                            <Badge variant=\"outline\">{book.genre}</Badge>\n                         </div>\n-                      </div>\n+                    </div>\n \n-                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n+                    <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                         <DetailItem label=\"ISBN\" value={book.isbn} />\n                         <DetailItem label=\"Pages\" value={book.pages} />\n                         <DetailItem label=\"Cover\" value={book.coverType} />\n                         <DetailItem label=\"MRP\" value={`â‚¹${book.price}`} />\n-                      </div>\n+                    </div>\n \n-                      {book.editions.map((edition, idx) => (\n+                    {book.editions.map((edition, idx) => (\n                         <div key={idx} className=\"bg-orange-50 p-4 rounded-xl space-y-2\">\n-                          <div className=\"flex justify-between items-center\">\n-                            <span className=\"text-sm font-medium\">{edition.date}</span>\n-                            <Badge variant=\"success\">{edition.sold}/{edition.quantity} sold</Badge>\n-                          </div>\n-                          <div className=\"flex justify-between text-sm\">\n-                            <span className=\"text-gray-600\">Royalty Earned</span>\n-                            <span className=\"font-semibold text-green-600\">\n-                              â‚¹{edition.royaltyEarned}\n-                            </span>\n-                          </div>\n+                            <div className=\"flex justify-between items-center\">\n+                                <span className=\"text-sm font-medium\">{edition.date}</span>\n+                                <Badge variant=\"success\">\n+                                    {edition.sold}/{edition.quantity} sold\n+                                </Badge>\n+                            </div>\n+                            <div className=\"flex justify-between text-sm\">\n+                                <span className=\"text-gray-600\">Royalty Earned</span>\n+                                <span className=\"font-semibold text-green-600\">\n+                                    â‚¹{edition.royaltyEarned}\n+                                </span>\n+                            </div>\n                         </div>\n-                      ))}\n-                    </div>\n-                  </div>\n-                </CardContent>\n-              </Card>\n-            ))}\n-          </div>\n-        </section>\n-      </div>\n-    </div>\n-  );\n+                    ))}\n+                </div>\n+            </div>\n+        </CardContent>\n+    </Card>\n+);\n+\n+BookCard.propTypes = {\n+    book: PropTypes.shape({\n+        id: PropTypes.number.isRequired,\n+        title: PropTypes.string.isRequired,\n+        cover: PropTypes.string.isRequired,\n+        author: PropTypes.string.isRequired,\n+        price: PropTypes.number.isRequired,\n+        genre: PropTypes.string.isRequired,\n+        isbn: PropTypes.string.isRequired,\n+        pages: PropTypes.number.isRequired,\n+        coverType: PropTypes.string.isRequired,\n+        editions: PropTypes.arrayOf(PropTypes.shape({\n+            date: PropTypes.string.isRequired,\n+            quantity: PropTypes.number.isRequired,\n+            sold: PropTypes.number.isRequired,\n+            royaltyEarned: PropTypes.number.isRequired\n+        })).isRequired\n+    }).isRequired\n };\n \n-// Reusable Metric Card Component\n-const MetricCard = ({ icon, title, value, trend, color }) => (\n-  <Card className=\"hover:shadow-md transition-shadow\">\n-    <CardContent className=\"p-6\">\n-      <div className=\"flex items-center gap-4\">\n-        <div className={`p-3 rounded-xl ${color}`}>{icon}</div>\n-        <div>\n-          <p className=\"text-sm text-gray-600\">{title}</p>\n-          <p className=\"text-2xl font-bold\">{value}</p>\n-          <span className=\"text-xs text-gray-500\">{trend}</span>\n-        </div>\n-      </div>\n-    </CardContent>\n-  </Card>\n+const MetricCard = ({ icon, title, value, trend, color, iconColor }) => (\n+    <Card className=\"hover:shadow-md transition-shadow\">\n+        <CardContent className=\"p-6\">\n+            <div className=\"flex items-center gap-4\">\n+                <div className={`p-3 rounded-xl ${color}`}>\n+                    <div className={iconColor}>{icon}</div>\n+                </div>\n+                <div>\n+                    <p className=\"text-sm text-gray-600\">{title}</p>\n+                    <p className=\"text-2xl font-bold\">{value}</p>\n+                    <span className=\"text-xs text-gray-500\">{trend}</span>\n+                </div>\n+            </div>\n+        </CardContent>\n+    </Card>\n );\n \n MetricCard.propTypes = {\n-  icon: PropTypes.node.isRequired,\n-  title: PropTypes.string.isRequired,\n-  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n-  trend: PropTypes.string.isRequired,\n-  color: PropTypes.string.isRequired\n+    icon: PropTypes.node.isRequired,\n+    title: PropTypes.string.isRequired,\n+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n+    trend: PropTypes.string.isRequired,\n+    color: PropTypes.string.isRequired,\n+    iconColor: PropTypes.string.isRequired\n };\n \n-// Reusable Detail Item Component\n const DetailItem = ({ label, value }) => (\n-  <div className=\"flex justify-between items-center\">\n-    <span className=\"text-gray-600\">{label}</span>\n-    <span className=\"font-medium\">{value}</span>\n-  </div>\n+    <div className=\"flex justify-between items-center\">\n+        <span className=\"text-gray-600\">{label}</span>\n+        <span className=\"font-medium\">{value}</span>\n+    </div>\n );\n \n DetailItem.propTypes = {\n-  label: PropTypes.string.isRequired,\n-  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n+    label: PropTypes.string.isRequired,\n+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n };\n \n export default AuthorDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738570487382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n-import { Book, DollarSign, Users, TrendingUp, Star, FileText, Search, Filter } from 'lucide-react';\n+import { Book, DollarSign, Users, TrendingUp, Star, FileText, Search } from 'lucide-react';\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n import PropTypes from 'prop-types';\n \n"
                },
                {
                    "date": 1738570496506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from 'react';\n+\n import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n import { Book, DollarSign, Users, TrendingUp, Star, FileText, Search } from 'lucide-react';\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n"
                },
                {
                    "date": 1738570525421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import  { useState } from 'react';\n-import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n+import { Card,  CardContent } from '@/components/ui/card';\n import { Book, DollarSign, Users, TrendingUp, Star, FileText, Search } from 'lucide-react';\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n import PropTypes from 'prop-types';\n"
                },
                {
                    "date": 1738570849587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState } from 'react';\n import { Book, DollarSign, TrendingUp, Users, Search, FileText, Star } from 'lucide-react';\n-import { Card, CardContent } from '@/components/ui/card';\n+import { Card, CardContent } from './components/ui/card';\n import { Button } from '@/components/ui/button';\n import { Badge } from '@/components/ui/badge';\n import PropTypes from 'prop-types';\n \n"
                }
            ],
            "date": 1738569960008,
            "name": "Commit-0",
            "content": "\nimport { Card, CardHeader, CardTitle, CardContent } from '../components/ui/card';\nimport { Book, DollarSign, Users, TrendingUp, Star, FileText } from 'lucide-react';\nimport { Badge } from '../components/ui/badge';\nimport { Button } from '../components/ui/button';\nimport PropTypes from 'prop-types';\n\nconst AuthorDashboard = () => {\n    const books = [\n        {\n          id: 1,\n          title: \"Your Daily Astrological Guide [English]\",\n          cover: \"/api/placeholder/200/300\",\n          author: \"Jay Yadav\",\n          price: 150,\n          genre: \"Astrology\",\n          isbn: \"9788198388094\",\n          pages: 68,\n          coverType: \"Paperback\",\n          editions: [\n            {\n              date: \"07 Jan 2025\",\n              quantity: 7,\n              mrp: 150,\n              royaltyPercentage: 20,\n              sold: 0,\n              royaltyEarned: 0\n            }\n          ],\n          authorPurchases: [\n            {\n              date: \"07 Jan 2025\",\n              particulars: \"Complimentary Copies\",\n              quantity: 5,\n              mrp: 150,\n              discount: \"100%\",\n              total: 0,\n              status: \"Paid\"\n            }\n          ]\n        },\n        {\n          id: 2,\n          title: \"Nadi Sutras\",\n          cover: \"/api/placeholder/200/300\",\n          author: \"Jay Yadav\",\n          price: 325,\n          genre: \"Nadi Astrology\",\n          isbn: \"9788197852961\",\n          pages: 153,\n          coverType: \"Paperback\",\n          editions: [\n            {\n              date: \"01 Dec 2024\",\n              quantity: 19,\n              mrp: 325,\n              royaltyPercentage: 20,\n              sold: 17,\n              royaltyEarned: 1105\n            }\n          ]\n        }\n      ];\n    \n      const totalRoyalties = books.reduce((sum, book) => \n        sum + book.editions.reduce((eSum, edition) => eSum + edition.royaltyEarned, 0), 0\n      );\n    \n      const totalSales = books.reduce((sum, book) => \n        sum + book.editions.reduce((eSum, edition) => eSum + edition.sold, 0), 0\n      );\n    \n    \n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header Section */}\n        <header className=\"flex items-center justify-between bg-white p-6 rounded-2xl shadow-sm\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">Welcome Back, Jay</h1>\n            <p className=\"text-gray-600 mt-2\">Your writing journey at a glance</p>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <Button variant=\"outline\" className=\"gap-2\">\n              <Star className=\"h-4 w-4\" />\n              Author Score: 4.8\n            </Button>\n            <img \n              src=\"/api/placeholder/48/48\" \n              alt=\"Profile\" \n              className=\"rounded-full w-12 h-12 border-2 border-orange-200\"\n            />\n          </div>\n        </header>\n\n        {/* Key Metrics Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            icon={<Book className=\"h-6 w-6\" />}\n            title=\"Published Titles\"\n            value={books.length}\n            trend=\"+2% from last month\"\n            color=\"bg-blue-100\"\n          />\n          <MetricCard\n            icon={<DollarSign className=\"h-6 w-6\" />}\n            title=\"Total Royalties\"\n            value={`â‚¹${totalRoyalties}`}\n            trend=\"+15% from last quarter\"\n            color=\"bg-green-100\"\n          />\n          <MetricCard\n            icon={<TrendingUp className=\"h-6 w-6\" />}\n            title=\"Lifetime Sales\"\n            value={totalSales}\n            trend=\"173% annual growth\"\n            color=\"bg-purple-100\"\n          />\n          <MetricCard\n            icon={<Users className=\"h-6 w-6\" />}\n            title=\"Reader Reach\"\n            value=\"1.2K+\"\n            trend=\"Active in 3 markets\"\n            color=\"bg-orange-100\"\n          />\n        </div>\n\n        {/* Book Catalog Section */}\n        <section className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Your Publications</h2>\n            <Button className=\"gap-2\">\n              <FileText className=\"h-4 w-4\" />\n              New Manuscript\n            </Button>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {books.map(book => (\n              <Card key={book.id} className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex gap-4\">\n                    <img\n                      src={book.cover}\n                      alt={book.title}\n                      className=\"w-32 h-48 object-cover rounded-xl shadow-md border\"\n                    />\n                    \n                    <div className=\"flex-1 space-y-3\">\n                      <div className=\"space-y-1\">\n                        <h3 className=\"text-lg font-semibold\">{book.title}</h3>\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <span>By {book.author}</span>\n                          <span>â€¢</span>\n                          <Badge variant=\"outline\">{book.genre}</Badge>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <DetailItem label=\"ISBN\" value={book.isbn} />\n                        <DetailItem label=\"Pages\" value={book.pages} />\n                        <DetailItem label=\"Cover\" value={book.coverType} />\n                        <DetailItem label=\"MRP\" value={`â‚¹${book.price}`} />\n                      </div>\n\n                      {book.editions.map((edition, idx) => (\n                        <div key={idx} className=\"bg-orange-50 p-4 rounded-xl space-y-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium\">{edition.date}</span>\n                            <Badge variant=\"success\">{edition.sold}/{edition.quantity} sold</Badge>\n                          </div>\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Royalty Earned</span>\n                            <span className=\"font-semibold text-green-600\">\n                              â‚¹{edition.royaltyEarned}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\n// Reusable Metric Card Component\nconst MetricCard = ({ icon, title, value, trend, color }) => (\n  <Card className=\"hover:shadow-md transition-shadow\">\n    <CardContent className=\"p-6\">\n      <div className=\"flex items-center gap-4\">\n        <div className={`p-3 rounded-xl ${color}`}>{icon}</div>\n        <div>\n          <p className=\"text-sm text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-bold\">{value}</p>\n          <span className=\"text-xs text-gray-500\">{trend}</span>\n        </div>\n      </div>\n    </CardContent>\n  </Card>\n);\n\nMetricCard.propTypes = {\n  icon: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  trend: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\n// Reusable Detail Item Component\nconst DetailItem = ({ label, value }) => (\n  <div className=\"flex justify-between items-center\">\n    <span className=\"text-gray-600\">{label}</span>\n    <span className=\"font-medium\">{value}</span>\n  </div>\n);\n\nDetailItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nexport default AuthorDashboard;"
        }
    ]
}