{
    "sourceFile": "src/pages/Books.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1738569718841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738569762161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,73 @@\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n \n const AuthorDashboard = () => {\n-  // ... (keep the same books data array as before)\n+    const books = [\n+        {\n+          id: 1,\n+          title: \"Your Daily Astrological Guide [English]\",\n+          cover: \"/api/placeholder/200/300\",\n+          author: \"Jay Yadav\",\n+          price: 150,\n+          genre: \"Astrology\",\n+          isbn: \"9788198388094\",\n+          pages: 68,\n+          coverType: \"Paperback\",\n+          editions: [\n+            {\n+              date: \"07 Jan 2025\",\n+              quantity: 7,\n+              mrp: 150,\n+              royaltyPercentage: 20,\n+              sold: 0,\n+              royaltyEarned: 0\n+            }\n+          ],\n+          authorPurchases: [\n+            {\n+              date: \"07 Jan 2025\",\n+              particulars: \"Complimentary Copies\",\n+              quantity: 5,\n+              mrp: 150,\n+              discount: \"100%\",\n+              total: 0,\n+              status: \"Paid\"\n+            }\n+          ]\n+        },\n+        {\n+          id: 2,\n+          title: \"Nadi Sutras\",\n+          cover: \"/api/placeholder/200/300\",\n+          author: \"Jay Yadav\",\n+          price: 325,\n+          genre: \"Nadi Astrology\",\n+          isbn: \"9788197852961\",\n+          pages: 153,\n+          coverType: \"Paperback\",\n+          editions: [\n+            {\n+              date: \"01 Dec 2024\",\n+              quantity: 19,\n+              mrp: 325,\n+              royaltyPercentage: 20,\n+              sold: 17,\n+              royaltyEarned: 1105\n+            }\n+          ]\n+        }\n+      ];\n+    \n+      const totalRoyalties = books.reduce((sum, book) => \n+        sum + book.editions.reduce((eSum, edition) => eSum + edition.royaltyEarned, 0), 0\n+      );\n+    \n+      const totalSales = books.reduce((sum, book) => \n+        sum + book.editions.reduce((eSum, edition) => eSum + edition.sold, 0), 0\n+      );\n+    \n+    \n \n   return (\n     <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 p-6\">\n       <div className=\"max-w-7xl mx-auto space-y-8\">\n"
                },
                {
                    "date": 1738569808981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n import { Book, DollarSign, Users, TrendingUp, Star, FileText } from 'lucide-react';\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n+import PropTypes from 'prop-types';\n \n const AuthorDashboard = () => {\n     const books = [\n         {\n@@ -204,13 +205,26 @@\n     </CardContent>\n   </Card>\n );\n \n+MetricCard.propTypes = {\n+  icon: PropTypes.node.isRequired,\n+  title: PropTypes.string.isRequired,\n+  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n+  trend: PropTypes.string.isRequired,\n+  color: PropTypes.string.isRequired\n+};\n+\n // Reusable Detail Item Component\n const DetailItem = ({ label, value }) => (\n   <div className=\"flex justify-between items-center\">\n     <span className=\"text-gray-600\">{label}</span>\n     <span className=\"font-medium\">{value}</span>\n   </div>\n );\n \n+DetailItem.propTypes = {\n+  label: PropTypes.string.isRequired,\n+  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n+};\n+\n export default AuthorDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738569818595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\n+\n import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n import { Book, DollarSign, Users, TrendingUp, Star, FileText } from 'lucide-react';\n import { Badge } from '@/components/ui/badge';\n import { Button } from '@/components/ui/button';\n"
                }
            ],
            "date": 1738569718841,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Book, DollarSign, Users, TrendingUp, Star, FileText } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\n\nconst AuthorDashboard = () => {\n  // ... (keep the same books data array as before)\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-amber-50 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header Section */}\n        <header className=\"flex items-center justify-between bg-white p-6 rounded-2xl shadow-sm\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">Welcome Back, Jay</h1>\n            <p className=\"text-gray-600 mt-2\">Your writing journey at a glance</p>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <Button variant=\"outline\" className=\"gap-2\">\n              <Star className=\"h-4 w-4\" />\n              Author Score: 4.8\n            </Button>\n            <img \n              src=\"/api/placeholder/48/48\" \n              alt=\"Profile\" \n              className=\"rounded-full w-12 h-12 border-2 border-orange-200\"\n            />\n          </div>\n        </header>\n\n        {/* Key Metrics Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            icon={<Book className=\"h-6 w-6\" />}\n            title=\"Published Titles\"\n            value={books.length}\n            trend=\"+2% from last month\"\n            color=\"bg-blue-100\"\n          />\n          <MetricCard\n            icon={<DollarSign className=\"h-6 w-6\" />}\n            title=\"Total Royalties\"\n            value={`₹${totalRoyalties}`}\n            trend=\"+15% from last quarter\"\n            color=\"bg-green-100\"\n          />\n          <MetricCard\n            icon={<TrendingUp className=\"h-6 w-6\" />}\n            title=\"Lifetime Sales\"\n            value={totalSales}\n            trend=\"173% annual growth\"\n            color=\"bg-purple-100\"\n          />\n          <MetricCard\n            icon={<Users className=\"h-6 w-6\" />}\n            title=\"Reader Reach\"\n            value=\"1.2K+\"\n            trend=\"Active in 3 markets\"\n            color=\"bg-orange-100\"\n          />\n        </div>\n\n        {/* Book Catalog Section */}\n        <section className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Your Publications</h2>\n            <Button className=\"gap-2\">\n              <FileText className=\"h-4 w-4\" />\n              New Manuscript\n            </Button>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {books.map(book => (\n              <Card key={book.id} className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex gap-4\">\n                    <img\n                      src={book.cover}\n                      alt={book.title}\n                      className=\"w-32 h-48 object-cover rounded-xl shadow-md border\"\n                    />\n                    \n                    <div className=\"flex-1 space-y-3\">\n                      <div className=\"space-y-1\">\n                        <h3 className=\"text-lg font-semibold\">{book.title}</h3>\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <span>By {book.author}</span>\n                          <span>•</span>\n                          <Badge variant=\"outline\">{book.genre}</Badge>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                        <DetailItem label=\"ISBN\" value={book.isbn} />\n                        <DetailItem label=\"Pages\" value={book.pages} />\n                        <DetailItem label=\"Cover\" value={book.coverType} />\n                        <DetailItem label=\"MRP\" value={`₹${book.price}`} />\n                      </div>\n\n                      {book.editions.map((edition, idx) => (\n                        <div key={idx} className=\"bg-orange-50 p-4 rounded-xl space-y-2\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium\">{edition.date}</span>\n                            <Badge variant=\"success\">{edition.sold}/{edition.quantity} sold</Badge>\n                          </div>\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Royalty Earned</span>\n                            <span className=\"font-semibold text-green-600\">\n                              ₹{edition.royaltyEarned}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\n// Reusable Metric Card Component\nconst MetricCard = ({ icon, title, value, trend, color }) => (\n  <Card className=\"hover:shadow-md transition-shadow\">\n    <CardContent className=\"p-6\">\n      <div className=\"flex items-center gap-4\">\n        <div className={`p-3 rounded-xl ${color}`}>{icon}</div>\n        <div>\n          <p className=\"text-sm text-gray-600\">{title}</p>\n          <p className=\"text-2xl font-bold\">{value}</p>\n          <span className=\"text-xs text-gray-500\">{trend}</span>\n        </div>\n      </div>\n    </CardContent>\n  </Card>\n);\n\n// Reusable Detail Item Component\nconst DetailItem = ({ label, value }) => (\n  <div className=\"flex justify-between items-center\">\n    <span className=\"text-gray-600\">{label}</span>\n    <span className=\"font-medium\">{value}</span>\n  </div>\n);\n\nexport default AuthorDashboard;"
        }
    ]
}